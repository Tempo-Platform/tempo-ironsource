name: Release Drafter

on:
  push:
    branches:
      - main
    paths-ignore:
      - tempo-ios-ironsource-mediation.podspec
      - tempo-ios-ironsource-mediation/ISTempoCustomAdapter.swift

  # pull_request event is required for autolabeler
  pull_request:
    # Only following types are supported
    types: [opened, reopened, synchronize]

permissions:
  # Required to create a GitHub release & update version files
  contents: write

env:
  PODSPEC_PATH: ./tempo-ios-ironsource-mediation.podspec
  ADAPTER_PATH: ./TempoAdapter/ISTempoCustomAdapter.swift

jobs:
  update-release-draft:
    runs-on: ubuntu-latest
    permissions:
      # Required to create a GitHub release
      contents: write
      # Required for autolabeler
      pull-requests: write
    outputs:
      version: ${{ steps.set-version.outputs.version }}

    steps:
      # Create or update the Release OR add a label to the Pull Request
      - name: Release Drafter
        id: release-drafter
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          commitish: main

      - name: Set Version
        id: set-version
        if: github.event_name != 'pull_request'
        shell: pwsh
        run: |
          $version = "${{ steps.release-drafter.outputs.tag_name }}"
          Write-Output "Release version: $version"
          Write-Output "version=$version" >> $env:GITHUB_OUTPUT

  update-podspec:
    needs: update-release-draft
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    environment: production

    steps:
      # Checkout main branch, with full history using PAT
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.REPO_WRITE_PAT }}

      # Update the semantic version number in the .podspec and ISTempoCustomAdapter.swift files
      - name: Update Versions
        shell: pwsh
        run: |
          $version = "${{ needs.update-release-draft.outputs.version }}"
          
          Write-Output "Attempting to update podspec version to $version"
          $podspec = Get-Content "$env:PODSPEC_PATH"
          $podspec = $podspec -replace '^(.*spec.version.*)(''.*'')$', "`$1'$version'"
          
          Write-Output "Adjusted podspec:`n$podspec"
          $podspec | Set-Content -Path "$env:PODSPEC_PATH" -Force
          
          Write-Output "Attempting to update ISTempoCustomAdapter.swift version to $version"
          $adapter = Get-Content "$env:ADAPTER_PATH"
          $adapter = $adapter -replace '^(.*TEMPO_ADAPTER_VERSION.*)(".*")$', "`$1`"$version`""
          
          Write-Output "Adjusted ISTempoCustomAdapter.swift:`n$adapter"
          $adapter | Set-Content -Path "$env:ADAPTER_PATH" -Force

      # Checks to see if a push needs to take place
      - name: Git diff
        shell: pwsh
        run: |
          $diff = git diff --name-only
          Write-Output "git diff: $diff"
          
          $outcome = $diff ? "true" : "false"
          Write-Output "git diff outcome: $outcome"
          
          Write-Output "diff=$outcome" >> $env:GITHUB_ENV

      # Stage and commit the updated files
      - name: Stage & Commit
        if: env.diff == 'true'
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git commit -a -m "Updated .podspec & ISTempoCustomAdapter.swift versions"

      # Force push the files using PAT to bypass branch protection
      - name: Push Changes
        if: env.diff == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.REPO_WRITE_PAT }}
          force_with_lease: true
